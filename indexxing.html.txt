<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>JPS Kuala Nerus</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css">
  <style>
    /* Reset */
    body, h1, h2, h3, p, ul {
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Segoe UI', sans-serif;
      line-height: 1.6;
      background: #f2f9ff;
      color: #333;
    }

    header {
      background-color: #004d99;
      color: white;
      padding: 1.5rem;
      text-align: center;
    }

    .logo-container {
      display: flex;
      justify-content: center;
      gap: 1rem;
      margin-bottom: 1rem;
      align-items: center;
    }

    .logo-container img {
      height: 70px;
    }

    nav {
      background-color: #0073e6;
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 1rem;
      padding: 1rem;
    }

    nav a {
      color: white;
      text-decoration: none;
      font-weight: bold;
    }

    nav a:hover {
      text-decoration: underline;
    }

    .container {
      max-width: 1200px;
      margin: auto;
      padding: 2rem;
    }

    section {
      margin-bottom: 3rem;
    }

    #map {
      height: 400px;
      width: 100%;
      border-radius: 10px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 1rem;
    }

    th, td {
      padding: 0.8rem;
      border: 1px solid #ddd;
      text-align: left;
    }

    th {
      background-color: #0073e6;
      color: white;
    }

    footer {
      background-color: #004d99;
      color: white;
      padding: 2rem 1rem;
      text-align: center;
    }

    .map-toggle-btn, #toggleView {
      background: #0073e6;
      color: white;
      border: none;
      padding: 0.6rem 1rem;
      cursor: pointer;
      border-radius: 5px;
      margin-bottom: 1rem;
    }

    .map-toggle-btn:hover {
      background-color: #005bb5;
    }

    @media (max-width: 768px) {
      nav {
        flex-direction: column;
        align-items: center;
      }

      .logo-container {
        flex-direction: column;
      }

      table {
        font-size: 0.9rem;
      }
    }
  </style>
</head>

<header>
  <div class="logo-container">
    <img src="jpslogo.png" alt="Logo JPS Kuala Nerus">
    <img src="trglogo.png" alt="Logo SUK Terengganu">
  </div>
  <h1>JABATAN PENGAIRAN DAN SALIRAN DAERAH KUALA NERUS</h1>
</header>

<nav>
  <a href="#about">Tentang</a>
  <a href="#services">Perkhidmatan</a>
  <a href="#map-section">Peta</a>
  <a href="#hydrology-data">Taburan Hujan</a>
  <a href="#repositori-dokumen">Dokumen</a>
  <a href="#contact">Hubungi</a>
</nav>

<footer>
  <p>&copy; 2025 Jabatan Pengairan dan Saliran Kuala Nerus, Terengganu</p>
  <p>Hubungi: <a href="mailto:jps.kualanerus@terengganu.gov.my" style="color: #aad4ff;">jps.kualanerus@terengganu.gov.my</a></p>
</footer>

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Map Logic
    const mapContainer = document.getElementById("mapContainer");
    const toggleMapBtn = document.getElementById("toggleMap");
    const map = L.map("map").setView([5.39448, 103.06308], 13);
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);
    L.marker([5.39448, 103.06308]).addTo(map).bindPopup("Pejabat JPS Kuala Nerus").openPopup();
    L.marker([5.40788, 103.0886]).addTo(map).bindPopup("Projek Tebatan Banjir UMT");
    toggleMapBtn.addEventListener("click", () => {
      const isHidden = mapContainer.style.display === "none";
      mapContainer.style.display = isHidden ? "block" : "none";
      toggleMapBtn.textContent = isHidden ? "Sembunyikan Peta" : "Lihat Peta";
      if (!isHidden) setTimeout(() => map.invalidateSize(), 200);
    });

    // Rainfall API
    const API_URL = "documents/rainfall-data.json";
    const tableBody = document.querySelector("#rainfallTable tbody");
    const toggleBtn = document.getElementById("toggleView");
    const chartView = document.getElementById("rainfall-chart-view");
    const tableView = document.getElementById("rainfall-table-view");
    let chart;

    async function fetchRainfallData() {
      try {
        const response = await fetch(API_URL);
        const data = await response.json();
        tableBody.innerHTML = "";
        data.forEach(station => {
          const row = `<tr><td>${station.station}</td><td>${station.rainfall}</td><td>${station.last_update}</td></tr>`;
          tableBody.innerHTML += row;
        });
        const labels = data.map(s => s.station);
        const values = data.map(s => s.rainfall);
        const updates = data.map(s => s.last_update);

        if (chart) chart.destroy();
        const ctx = document.getElementById("rainChart").getContext("2d");
        chart = new Chart(ctx, {
          type: 'bar',
          data: {
            labels: labels,
            datasets: [{
              label: 'Jumlah Hujan (mm)',
              data: values,
              backgroundColor: '#0073e6'
            }]
          },
          options: {
            plugins: {
              tooltip: {
                callbacks: {
                  afterLabel: (ctx) => `Dikemaskini: ${updates[ctx.dataIndex]}`
                }
              }
            },
            scales: { y: { beginAtZero: true } }
          }
        });
      } catch (err) {
        tableBody.innerHTML = "<tr><td colspan='3'>Gagal memuatkan data.</td></tr>";
        console.error("API Error:", err);
      }
    }

  // Live Date/Time Display and Header Buttons/Search
  document.addEventListener("DOMContentLoaded", function () {
    function updateClock() {
      const now = new Date();
      const days = ["Ahad","Isnin","Selasa","Rabu","Khamis","Jumaat","Sabtu"];
      const months = ["Januari","Februari","Mac","April","Mei","Jun","Julai","Ogos","September","Oktober","November","Disember"];
      const day = days[now.getDay()];
      const date = now.getDate();
      const month = months[now.getMonth()];
      const year = now.getFullYear();
      const time = now.toLocaleTimeString('ms-MY', { hour: '2-digit', minute: '2-digit', second: '2-digit' });
      document.getElementById("date-time-text").textContent =
        `${day}, ${date} ${month} ${year} | ${time}`;
    }
    updateClock();
    setInterval(updateClock, 1000);

    // Header Buttons
    document.getElementById("faq-btn").onclick = function() {
      window.location.href = "#faq";
    };
    document.getElementById("contact-btn").onclick = function() {
      window.location.href = "#contact";
    };
    document.getElementById("feedback-btn").onclick = function() {
      window.location.href = "#borang-maklum-balas";
    };

    // Header Search
    document.getElementById("header-search-form").onsubmit = function(e) {
      e.preventDefault();
      const q = document.getElementById("header-search-input").value.trim().toLowerCase();
      if (!q) return;
      let found = false;
      function walk(node) {
        if (found) return;
        if (node.nodeType === 3 && node.textContent.toLowerCase().includes(q)) {
          node.parentElement.scrollIntoView({ behavior: "smooth", block: "center" });
          node.parentElement.style.background = "#fff3cd";
          setTimeout(() => node.parentElement.style.background = "", 2000);
          found = true;
        } else if (node.nodeType === 1 && node.childNodes) {
          node.childNodes.forEach(walk);
        }
      }
      walk(document.body);
      if (!found) alert("Tiada padanan dijumpai.");
    };

    // Rainfall Table & CSV
    function getRainfallDataFromHTML() {
      const json = document.getElementById('rainfall-json').textContent;
      return JSON.parse(json);
    }
    function updateRainfallTable(data) {
      const tbody = document.getElementById("rainfallTableBody");
      tbody.innerHTML = "";
      data.forEach(row => {
        tbody.innerHTML += `<tr>
          <td>${row.station}</td>
          <td>${row.rainfall}</td>
          <td>${row.updated}</td>
        </tr>`;
      });
    }
    const rainfallData = getRainfallDataFromHTML();
    updateRainfallTable(rainfallData);
    document.getElementById("downloadRainfallCSV").addEventListener("click", function () {
      const data = getRainfallDataFromHTML();
      let csv = "Stesen,Jumlah Hujan (mm),Kemaskini\n";
      data.forEach(row => {
        csv += `"${row.station}","${row.rainfall}","${row.updated}"\n`;
      });
      const blob = new Blob([csv], { type: "text/csv" });
      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = "rainfall_kuala_nerus.csv";
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    });

    // River Level Table & CSV
    const riverData = [
      { station: "Sungai Nerus", level: 1.8, status: "Normal", updated: "2025-06-18 15:00" },
      { station: "Sungai Tepoh", level: 2.5, status: "Amaran", updated: "2025-06-18 14:45" },
      { station: "Sungai Batu Rakit", level: 3.1, status: "Bahaya", updated: "2025-06-18 14:30" }
    ];
    function refreshRiverLevel() {
      const tbody = document.querySelector("#riverLevelTable tbody");
      tbody.innerHTML = "";
      riverData.forEach(d => {
        let color = "#d4edda", fontColor = "#155724", icon = "ðŸŸ¢";
        if (d.status === "Amaran") { color = "#fff3cd"; fontColor = "#856404"; icon = "ðŸŸ¡"; }
        if (d.status === "Bahaya") { color = "#f8d7da"; fontColor = "#721c24"; icon = "ðŸ”´"; }
        tbody.innerHTML += `
          <tr>
            <td data-label="Stesen" style="font-weight:500;">${d.station}</td>
            <td data-label="Paras Air (m)" style="font-weight:500;">${d.level.toFixed(2)}</td>
            <td data-label="Status" style="background:${color};color:${fontColor};font-weight:bold;text-align:center;border-radius:8px;">${icon} ${d.status}</td>
            <td data-label="Kemaskini">${d.updated}</td>
          </tr>`;
      });
    }
    refreshRiverLevel();
    document.getElementById("downloadRiverCSV").addEventListener("click", function () {
      let csv = "Stesen,Paras Air (m),Status,Kemaskini\n";
      riverData.forEach(row => {
        csv += `"${row.station}","${row.level}","${row.status}","${row.updated}"\n`;
      });
      const blob = new Blob([csv], { type: "text/csv" });
      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = "aras_air_sungai_kuala_nerus.csv";
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    });

    // Back to Top Button
    const backToTopBtn = document.getElementById("backToTop");
    window.addEventListener("scroll", function () {
      backToTopBtn.style.display = window.scrollY > 300 ? "block" : "none";
    });
    backToTopBtn.addEventListener("click", function () {
      window.scrollTo({ top: 0, behavior: "smooth" });
    });

    // Help Button - Show a modal with useful info
      const helpButton = document.getElementById("help-button");
      helpButton.addEventListener("click", function () {
        // Create modal if not exists
        if (!document.getElementById("help-modal")) {
          const modal = document.createElement("div");
          modal.id = "help-modal";
          modal.style.position = "fixed";
          modal.style.top = "0";
          modal.style.left = "0";
          modal.style.width = "100vw";
          modal.style.height = "100vh";
          modal.style.background = "rgba(0,0,0,0.4)";
          modal.style.zIndex = "2000";
          modal.style.display = "flex";
          modal.style.alignItems = "center";
          modal.style.justifyContent = "center";
          modal.innerHTML = `
            <div style="background:#fff;padding:2rem 1.5rem;border-radius:16px;max-width:350px;width:90%;box-shadow:0 8px 32px rgba(0,0,0,0.18);text-align:left;position:relative;">
              <button id="close-help-modal" aria-label="Tutup Bantuan" style="position:absolute;top:10px;right:14px;background:none;border:none;font-size:1.5em;color:#0073e6;cursor:pointer;">&times;</button>
              <h3 style="color:#0073e6;margin-top:0;">Bantuan Laman Web</h3>
              <ul style="padding-left:1.2em;font-size:1em;">
                <li>Untuk pertanyaan, klik <a href="#contact" style="color:#0073e6;">Hubungi Kami</a>.</li>
                <li>Untuk maklum balas, klik <a href="#borang-maklum-balas" style="color:#0073e6;">Borang Maklum Balas</a>.</li>
                <li>Untuk soalan lazim, klik <a href="#faq" style="color:#0073e6;">Soalan Lazim (FAQ)</a>.</li>
                <li>Gunakan carian di atas untuk mencari info di laman ini.</li>
              </ul>
              <div style="margin-top:1.2em;font-size:0.98em;color:#666;">
                Jika anda perlukan bantuan lanjut, sila hubungi JPS Kuala Nerus di <br>
                <a href="mailto:jpskualanerus@terengganu.gov.my" style="color:#0073e6;">jpskualanerus@terengganu.gov.my</a>
              </div>
            </div>
          `;
          document.body.appendChild(modal);
          document.getElementById("close-help-modal").onclick = function () {
            modal.remove();
          };
          modal.onclick = function(e) {
            if (e.target === modal) modal.remove();
          };
        }
      });

      // ...other code...
    });

    // Hamburger Menu
    const navToggle = document.querySelector('.nav-toggle');
    const navMenu = document.querySelector('.nav-menu');
    navToggle.addEventListener('click', function () {
      navMenu.classList.toggle('open');
    });
    navMenu.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', () => {
        if (window.innerWidth < 900) navMenu.classList.remove('open');
      });
    });
  
    toggleBtn.addEventListener("click", () => {
      const isTableVisible = tableView.style.display !== "none";
      tableView.style.display = isTableVisible ? "none" : "block";
      chartView.style.display = isTableVisible ? "block" : "none";
      toggleBtn.textContent = isTableVisible ? "Tukar kepada Jadual ðŸ“‹" : "Tukar kepada Carta ðŸ“ˆ";
    });

    fetchRainfallData();
    setInterval(fetchRainfallData, 300000); // Auto-refresh every 5 minutes
  });
</script>
